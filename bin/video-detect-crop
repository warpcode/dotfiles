#!/usr/bin/env bash

SOURCE=""
SCALE=
VF='fps=1/16,cropdetect=24:8:0'

while [[ $# -gt 0 ]]; do
    case "$1" in
        --scale)
            VF="scale=$2,${VF}"
            shift 2
            ;;
        *)
            SOURCE=$1
            shift
            break
            ;;
    esac
done

if [[ -z "$SOURCE" ]] || [[ ! -r "$SOURCE" ]]; then
    echo "Source is not readable"
    exit 1;
fi

max_width=0
max_height=0
min_offsetx=-1
min_offsety=-1

while read -r line; do
  width=$(echo "$line" | awk -F ':' '{print $1}')
  height=$(echo "$line" | awk -F ':' '{print $2}')
  offsetx=$(echo "$line" | awk -F ':' '{print $3}')
  offsety=$(echo "$line" | awk -F ':' '{print $4}')

  [[ $width -gt $max_width ]] && max_width=$width
  [[ $height -gt $max_height ]] && max_height=$height

  [[ $min_offsetx -lt 0 ]] && min_offsetx=$offsetx
  [[ $offsetx -lt $min_offsetx ]] && min_offsetx=$offsetx

  [[ $min_offsety -lt 0 ]] && min_offsety=$offsety
  [[ $offsety -lt $min_offsety ]] && min_offsety=$offsety
done < <(ffmpeg \
    -i "$SOURCE" \
    -vf "$VF" \
    -f null - \
    2>&1 | \
    awk '{ match($0, /crop=([0-9]+:[0-9]+:[0-9]+:[0-9]+)/, a); if (a[1]) print a[1] }' | \
    uniq \
)

echo "${max_width}:${max_height}:${min_offsetx}:${min_offsety}"
